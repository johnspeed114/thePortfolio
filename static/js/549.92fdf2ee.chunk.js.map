{"version":3,"file":"static/js/549.92fdf2ee.chunk.js","mappings":"4UAIMA,EAAuBC,EAAAA,YAAiB,WAS3CC,GAAQ,IARTC,EAAQ,EAARA,SACAC,EAAO,EAAPA,QAAO,IACPC,UAAAA,OAAS,IAAG,WAAQ,EACpBC,EAAI,EAAJA,KAAI,IAEJC,GAAIC,OAAS,IAAG,QAAK,EACrBC,EAAS,EAATA,UACGC,GAAK,YAERP,GAAWQ,EAAAA,EAAAA,IAAmBR,EAAU,WACxC,IAAMS,EAAkB,GAAH,OAAMT,EAAQ,YAAIE,GACvC,OAAoBQ,EAAAA,EAAAA,KAAKL,GAAW,gBAClCN,IAAKA,GACFQ,GAAK,IACRD,UAAWK,IAAWL,EAAWG,EAAiBN,GAAQ,GAAJ,OAAOM,EAAe,YAAIN,GAAQF,GAAW,QAAJ,OAAYA,MAE/G,IACAJ,EAAQe,YAAc,UACtB,Q,UCoDA,MAlEA,WACE,OAA4BC,EAAAA,EAAAA,UAAS,MAAK,eAAnCC,EAAM,KAAEC,EAAS,KACxB,GAA8BF,EAAAA,EAAAA,WAAS,GAAK,eAArCG,EAAO,KAAEC,EAAU,KAEpBC,EAAY,WAChB,IAAMC,EAAQ,IAAIC,MAClBD,EAAME,IAAG,gDAA4CC,KAAKC,OAE1DJ,EAAMK,OAAS,WACbT,EAAUI,EAAME,KAChBJ,GAAW,EACb,EAEAE,EAAMM,QAAU,WACdC,QAAQC,MAAM,uBACdV,GAAW,EACb,CACF,EAOA,OAJAW,EAAAA,EAAAA,YAAU,WACRV,GACF,GAAG,KAGD,4BACE,gBAAKW,MAAO,CAAEC,SAAU,WAAYC,MAAO,OAAQC,OAAQ,QAAS,UAClE,SAACC,EAAA,EAAU,OAEb,mBAAQ3B,UAAU,aAAY,UAC5B,UAAC4B,EAAA,EAAS,YAGR,UAACC,EAAA,EAAI,CAAC7B,UAAU,wCAAuC,WACrD,SAAC6B,EAAA,OAAS,CAAC7B,UAAU,yDAAwD,SAAC,sCAG9E,UAAC6B,EAAA,OAAS,CAAC7B,UAAU,oBAAmB,UAAC,wQAK5B,kBAAM,KAAC,kBAAM,uFAM5B,UAAC6B,EAAA,EAAI,CAAC7B,UAAU,OAAOuB,MAAO,CAAEO,MAAO,OAAQC,UAAW,MAAO,UAC9DrB,GACC,SAAC,EAAO,CAACd,UAAU,YAEnB,SAACiC,EAAA,MAAQ,CAACd,IAAKP,KAEjB,SAACqB,EAAA,OAAS,WACR,SAACG,EAAA,EAAM,CAACrC,QAAQ,UAAUsC,QAASrB,EAAU,SAAC,8BAS5D,C,0EChDA,IAZA,WACE,OACE,UAAC,KAAM,YAEL,SAAC,IAAa,KACd,SAAC,IAAK,KACN,yBAAcsB,UAAW,MACzB,sBAAWV,SAAU,CAAC,GAAI,GAAI,IAAKW,MAAO,OAGhD,C","sources":["../node_modules/react-bootstrap/esm/Spinner.js","components/Pages/Home.js","components/Utils/ThreeDLogo.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation = 'border',\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","// @ts-nocheck\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport ThreeDLogo from 'components/Utils/ThreeDLogo.js';\r\nimport '../../App.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { Container, Button, Card, Spinner } from 'react-bootstrap';\r\n\r\nfunction Home() {\r\n  const [imgSrc, setImgSrc] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const loadImage = () => {\r\n    const image = new Image();\r\n    image.src = `https://picsum.photos/2000/800?random=${Date.now()}`;\r\n\r\n    image.onload = () => {\r\n      setImgSrc(image.src);\r\n      setLoading(false);\r\n    };\r\n\r\n    image.onerror = () => {\r\n      console.error('Error loading image');\r\n      setLoading(false);\r\n    };\r\n  };\r\n\r\n  // Use useEffect to load a new image on the initial render\r\n  useEffect(() => {\r\n    loadImage();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ position: 'absolute', width: '100%', height: '100%' }}>\r\n        <ThreeDLogo />\r\n      </div>\r\n      <header className='App-header'>\r\n        <Container>\r\n          {/* You can use fluid to make it resize to fit the entire page auto */}\r\n\r\n          <Card className='titlewelcome-card bg-transparent mt-1'>\r\n            <Card.Body className='titlewelcome-card-body bg-transparent font-weight-bold'>\r\n              Welcome to John's Portolfio Site\r\n            </Card.Body>\r\n            <Card.Body className='h6 bg-transparent'>\r\n              I'm a Full Stack Developer, passionate about creating innovative\r\n              web applications and enhancing user experience. With my\r\n              proficiency in languages like JavaScript, HTML, CSS, TypeScript,\r\n              and React, I'm ready to tackle challenges and offer you unique\r\n              solutions. <br /> <br />\r\n              PS: (click and drag the side of this page, and see what happens\r\n              üòÅ)\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className='mb-3' style={{ color: '#000', marginTop: '3%' }}>\r\n            {loading ? (\r\n              <Spinner animation='border' />\r\n            ) : (\r\n              <Card.Img src={imgSrc} />\r\n            )}\r\n            <Card.Body>\r\n              <Button variant='primary' onClick={loadImage}>\r\n                Randomize Pic\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Container>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { OrbitControls, Stars } from '@react-three/drei';\r\n\r\n// function Box() {\r\n//   return (\r\n//     <mesh>\r\n//       <boxGeometry attach='geometry' />\r\n//       <meshLambertMaterial attach='material' color='hotpink' wireframe />\r\n//     </mesh>\r\n//   );\r\n// }\r\n\r\nfunction ThreeDLogo() {\r\n  return (\r\n    <Canvas>\r\n      {/* This tag \"Canvas\" tag removes from react rendering to react three fiber rendering */}\r\n      <OrbitControls />\r\n      <Stars />\r\n      <ambientLight intensity={0.5} />\r\n      <spotLight position={[10, 15, 10]} angle={0.3} />\r\n    </Canvas>\r\n  );\r\n}\r\n\r\nexport default ThreeDLogo;\r\n"],"names":["Spinner","React","ref","bsPrefix","variant","animation","size","as","Component","className","props","useBootstrapPrefix","bsSpinnerPrefix","_jsx","classNames","displayName","useState","imgSrc","setImgSrc","loading","setLoading","loadImage","image","Image","src","Date","now","onload","onerror","console","error","useEffect","style","position","width","height","ThreeDLogo","Container","Card","color","marginTop","Button","onClick","intensity","angle"],"sourceRoot":""}