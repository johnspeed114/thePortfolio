{"version":3,"file":"static/js/453.ffe8ef91.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","key","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","indexOf","push","length","cancel","index","splice","delete","process","i","has","createRenderStep","processStep","stepId","processFrame","Math","max","min","forEach","requestAnimationFrame","frame","keepAlive","immediate","cancelFrame","MotionContext","PresenceContext","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","useIsomorphicLayoutEffect","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","translateAlias","x","y","z","transformPerspective","numTransforms","getValueAsType","type","transform","int","number","round","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","degrees","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","alpha","originX","progressPercentage","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","valueAsType","default","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","isMotionValue","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","pipe","FocusGesture","arguments","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","getVelocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","defaultOffset","arr","remaining","offsetProgress","progress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","interpolate","calculatedDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","warning","dampingRatio","clamp","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","reverse","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","complex","maxDefaults","applyDefaultFilter","slice","split","match","floatRegex","unit","defaultValue","functionRegex","filter","getAnimatableNone","functions","defaultValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","from","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","testValueType","dimensionValueTypes","percent","vw","vh","parse","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","motionValue","setTarget","makeTargetAnimatable","getOriginFromTransition","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","hasAnimated","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notify","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","parseFloat","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","xScale","yScale","averageScale","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","subscriptionManager","args","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","output","to","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","_b","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","clear","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","exec","parseCSSVariable","token","fallback","getPropertyValue","isCSSVariableToken","resolveCSSVariables","obj","TypeError","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parsed","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig","checkStringStartsWith","cssVariableRegex","item","moveItem","toIndex","startIndex","endIndex","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","numValues","blendValue","fromThis","mixObject","originStats","analyseComplexValue","targetStats","numVars","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","input","isClamp","inputLength","interpolator","progressInRange","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","init","useLayoutEffect","frameDuration","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","subscription","getSize","eventManagers","passiveEffect","stopPassiveEffect","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","isColorString","r","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","cssVarTokeniser","regex","countKey","colorTokeniser","colorRegex","numberTokeniser","tokenise","tokenised","originalValue","toString","parseComplexValue","createTransformer","convertNumbersToZero","transformer","createUnitType","endsWith"],"sourceRoot":""}