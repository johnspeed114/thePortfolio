{"version":3,"file":"static/js/635.99762290.chunk.js","mappings":"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","sources":["store/AccountReducer.js","components/Utils/ValidationLogic.js","components/Pages/Auth/Register.js","../node_modules/react-bootstrap/esm/Alert.js"],"sourcesContent":["// export const errorReducer = (state, action) => {\r\n//   if (action.type === '@_MISSING') {\r\n//     return { error: 'Missing @ in your email' };\r\n//   }\r\n// };\r\n\r\nexport const formReducer = (state, action) => {\r\n  //[To Do] once we establish this reducer, we will change conditionals to switch\r\n  switch (action.type) {\r\n    case 'USERNAME': {\r\n      return {\r\n        ...state,\r\n        username: action.value,\r\n      };\r\n    }\r\n    case 'EMAIL': {\r\n      return { ...state, email: action.value };\r\n    }\r\n    case 'PASSWORD': {\r\n      return { ...state, password: action.value };\r\n    }\r\n    case 'CONFIRM_PASSWORD': {\r\n      return { ...state, confirmPassword: action.value };\r\n    }\r\n    default: {\r\n      throw Error('Unknown Error: ' + action.type);\r\n    }\r\n  }\r\n};\r\n","const validateInput = (name, value, form) => {\r\n    switch(name){\r\n        case 'username': \r\n            return value ? '': \"Please enter your name\";\r\n\r\n        case 'email':\r\n            if (!value) return 'Please enter your email';\r\n            if (!value.includes('@')) return 'Email is missing \"@\". Please input the correct email format'\r\n            return '';\r\n        \r\n        case 'password':\r\n            if (!value) return 'Please enter your password';\r\n            if (value.length< 7) return 'Password is short! Must be more than 6 characters.'\r\n            const pwRegEx = /(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/;\r\n            if (!pwRegEx.test(value))return 'You are missing a special character, number and/or uppercase letter. Please include them all.'\r\n            return '';\r\n        \r\n        case 'confirmPassword':\r\n            if(!value) return \"Please confirm your password\";\r\n            if (value !== form.password) return \"Confirmed password and password don't match.\"\r\n            return '';\r\n        \r\n            default:\r\n            return '';\r\n        }\r\n        \r\n}\r\nexport default validateInput;","// @ts-nocheck\r\nimport { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';\r\nimport { auth } from '../../../firebase';\r\nimport React, { useReducer, useState, useContext } from 'react';\r\nimport { Alert, Button, Form } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { formReducer } from 'store/AccountReducer';\r\nimport AuthContext from 'store/auth-context';\r\nimport validateInput from 'components/Utils/ValidationLogic';\r\n\r\nconst Register = () => {\r\n  // const [error, dispatchError] = useReducer(errorReducer, {error:''})\r\n  //[FYI] bday stands for user's birthday\r\n  const [form, dispatchForm] = useReducer(formReducer, {\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    username: '',\r\n  });\r\n  const [error, setError] = useState({});\r\n  const authCtx = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  //instead of multiple changers we can just use one with a dyncamic dispatchForm\r\n  const usernameChangeHandler = (event) => {\r\n    dispatchForm({ type: 'USERNAME', value: event.target.value });\r\n  };\r\n\r\n  const emailChangeHandler = (event) => {\r\n    dispatchForm({ type: 'EMAIL', value: event.target.value });\r\n\r\n    //onchange might have some limitations due to feedback triggering for all inputs\r\n    //lets just use handlesubmit with usestate\r\n  };\r\n\r\n  const passwordChangeHandler = (event) => {\r\n    dispatchForm({ type: 'PASSWORD', value: event.target.value });\r\n  };\r\n\r\n  const confPasswordChangeHandler = (event) => {\r\n    dispatchForm({ type: 'CONFIRM_PASSWORD', value: event.target.value });\r\n  };\r\n\r\n  //Fetch api post register user data\r\n  const postRegisterData = async () => {\r\n    //with this useReducer we can map for the data out to be posted in firebase or just send it whole?\r\n    //need to check if the email exist\r\n    try {\r\n      const result = await createUserWithEmailAndPassword(\r\n        auth,\r\n        form.email,\r\n        form.password\r\n      );\r\n\r\n      await updateProfile(result.user, {\r\n        displayName: form.username,\r\n      });\r\n      authCtx.setDisplayName(form.username);\r\n      navigate('/success');\r\n    } catch (error) {\r\n      if (error.code === 'auth/email-already-in-use') {\r\n        // Set an error state here to show a notification\r\n        setError({\r\n          message: 'The email address is already in use by another account.',\r\n        });\r\n      }\r\n      console.log(error);\r\n    }\r\n\r\n    //[To do] make this funciton post http to firebase properly\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newErrors = Object.entries(form).reduce((acc, [name, value]) => {\r\n      const errorMessage = validateInput(name, value, form);\r\n      if (errorMessage) {\r\n        acc[name] = errorMessage;\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    setError(newErrors);\r\n    console.log(error.confirmPassword);\r\n\r\n    if (Object.keys(newErrors).length === 0) {\r\n      console.log('No errors. Proceed with the registration process.');\r\n      postRegisterData();\r\n    }\r\n\r\n    // lets just use a grouping method of if else, instead of just checking with state error(closure issue)\r\n  };\r\n\r\n  return (\r\n    <div className='m-3'>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId='formUsername'>\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            type=''\r\n            placeholder='Username'\r\n            onChange={usernameChangeHandler}\r\n            value={form.username}\r\n            required\r\n            isInvalid={!!error.username}\r\n          />\r\n          <Form.Control.Feedback type='invalid'>\r\n            {error.username}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group controlId='formEmail'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Example@email.com'\r\n            onChange={emailChangeHandler}\r\n            value={form.email}\r\n            required\r\n            isInvalid={!!error.email}\r\n          />\r\n          <Form.Control.Feedback type='invalid'>\r\n            {error.email}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>\r\n            Password (Must be greater than 6 characters, have one upper case\r\n            letter, have a number, have a special character)\r\n          </Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Password'\r\n            value={form.password}\r\n            required\r\n            onChange={passwordChangeHandler}\r\n            isInvalid={!!error.password}\r\n          />\r\n          <Form.Control.Feedback type='invalid'>\r\n            {error.password}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group className='mb-3'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            value={form.confirmPassword}\r\n            required\r\n            onChange={confPasswordChangeHandler}\r\n            isInvalid={!!error.confirmPassword}\r\n          />\r\n          <Form.Control.Feedback type='invalid'>\r\n            {error.confirmPassword}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        {error.message && <Alert variant='danger'> {error.message}</Alert>}\r\n        <Button className='me-1' type='submit'>\r\n          Submit\r\n        </Button>\r\n        <Button variant='secondary' onClick={() => navigate('/home')}>\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});"],"names":["formReducer","state","action","type","username","value","email","password","confirmPassword","Error","name","form","includes","length","test","useReducer","dispatchForm","useState","error","setError","authCtx","useContext","AuthContext","navigate","useNavigate","postRegisterData","createUserWithEmailAndPassword","auth","result","updateProfile","user","displayName","setDisplayName","code","message","console","log","className","Form","noValidate","onSubmit","event","preventDefault","newErrors","Object","entries","reduce","acc","errorMessage","validateInput","keys","controlId","placeholder","onChange","target","required","isInvalid","Alert","variant","Button","onClick","DivStyledAsH4","divWithClassName","AlertHeading","createWithBsPrefix","Component","AlertLink","Anchor","defaultProps","show","transition","Fade","closeLabel","React","uncontrolledProps","ref","useUncontrolled","bsPrefix","closeVariant","children","onClose","dismissible","props","prefix","useBootstrapPrefix","handleClose","useEventCallback","e","Transition","alert","_jsxs","role","undefined","classNames","_jsx","CloseButton","unmountOnExit","in","assign","Link","Heading"],"sourceRoot":""}