{"version":3,"file":"static/js/369.a0477c7b.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/context/ReorderContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/components/Reorder/utils/check-reorder.mjs","../node_modules/framer-motion/dist/es/components/Reorder/Group.mjs","../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/transform.mjs","../node_modules/framer-motion/dist/es/value/use-transform.mjs","../node_modules/framer-motion/dist/es/value/use-combine-values.mjs","../node_modules/framer-motion/dist/es/components/Reorder/Item.mjs","../node_modules/framer-motion/dist/es/components/Reorder/index.mjs"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","import { createContext } from 'react';\n\nconst ReorderContext = createContext(null);\n\nexport { ReorderContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { moveItem } from '../../../utils/array.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\nfunction checkReorder(order, value, offset, velocity) {\n    if (!velocity)\n        return order;\n    const index = order.findIndex((item) => item.value === value);\n    if (index === -1)\n        return order;\n    const nextOffset = velocity > 0 ? 1 : -1;\n    const nextItem = order[index + nextOffset];\n    if (!nextItem)\n        return order;\n    const item = order[index];\n    const nextLayout = nextItem.layout;\n    const nextItemCenter = mix(nextLayout.min, nextLayout.max, 0.5);\n    if ((nextOffset === 1 && item.layout.max + offset > nextItemCenter) ||\n        (nextOffset === -1 && item.layout.min + offset < nextItemCenter)) {\n        return moveItem(order, index, index + nextOffset);\n    }\n    return order;\n}\n\nexport { checkReorder };\n","import { invariant } from '../../utils/errors.mjs';\nimport * as React from 'react';\nimport { forwardRef, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { checkReorder } from './utils/check-reorder.mjs';\n\nfunction ReorderGroup({ children, as = \"ul\", axis = \"y\", onReorder, values, ...props }, externalRef) {\n    const Component = useConstant(() => motion(as));\n    const order = [];\n    const isReordering = useRef(false);\n    invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n    const context = {\n        axis,\n        registerItem: (value, layout) => {\n            /**\n             * Ensure entries can't add themselves more than once\n             */\n            if (layout &&\n                order.findIndex((entry) => value === entry.value) === -1) {\n                order.push({ value, layout: layout[axis] });\n                order.sort(compareMin);\n            }\n        },\n        updateOrder: (id, offset, velocity) => {\n            if (isReordering.current)\n                return;\n            const newOrder = checkReorder(order, id, offset, velocity);\n            if (order !== newOrder) {\n                isReordering.current = true;\n                onReorder(newOrder\n                    .map(getValue)\n                    .filter((value) => values.indexOf(value) !== -1));\n            }\n        },\n    };\n    useEffect(() => {\n        isReordering.current = false;\n    });\n    return (React.createElement(Component, { ...props, ref: externalRef, ignoreStrict: true },\n        React.createElement(ReorderContext.Provider, { value: context }, children)));\n}\nconst Group = forwardRef(ReorderGroup);\nfunction getValue(item) {\n    return item.value;\n}\nfunction compareMin(a, b) {\n    return a.layout.min - b.layout.min;\n}\n\nexport { Group, ReorderGroup };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { interpolate } from './interpolate.mjs';\n\nconst isCustomValueType = (v) => {\n    return typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, {\n        mixer: getMixer(outputRange[0]),\n        ...options,\n    });\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","import { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { cancelFrame, frame } from '../frameloop/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.update(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { invariant } from '../../utils/errors.mjs';\nimport * as React from 'react';\nimport { forwardRef, useContext, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useMotionValue } from '../../value/use-motion-value.mjs';\nimport { useTransform } from '../../value/use-transform.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction useDefaultMotionValue(value, defaultValue = 0) {\n    return isMotionValue(value) ? value : useMotionValue(defaultValue);\n}\nfunction ReorderItem({ children, style = {}, value, as = \"li\", onDrag, layout = true, ...props }, externalRef) {\n    const Component = useConstant(() => motion(as));\n    const context = useContext(ReorderContext);\n    const point = {\n        x: useDefaultMotionValue(style.x),\n        y: useDefaultMotionValue(style.y),\n    };\n    const zIndex = useTransform([point.x, point.y], ([latestX, latestY]) => latestX || latestY ? 1 : \"unset\");\n    const measuredLayout = useRef(null);\n    invariant(Boolean(context), \"Reorder.Item must be a child of Reorder.Group\");\n    const { axis, registerItem, updateOrder } = context;\n    useEffect(() => {\n        registerItem(value, measuredLayout.current);\n    }, [context]);\n    return (React.createElement(Component, { drag: axis, ...props, dragSnapToOrigin: true, style: { ...style, x: point.x, y: point.y, zIndex }, layout: layout, onDrag: (event, gesturePoint) => {\n            const { velocity } = gesturePoint;\n            velocity[axis] &&\n                updateOrder(value, point[axis].get(), velocity[axis]);\n            onDrag && onDrag(event, gesturePoint);\n        }, onLayoutMeasure: (measured) => {\n            measuredLayout.current = measured;\n        }, ref: externalRef, ignoreStrict: true }, children));\n}\nconst Item = forwardRef(ReorderItem);\n\nexport { Item, ReorderItem };\n","import { Group } from './Group.mjs';\nimport { Item } from './Item.mjs';\n\nconst Reorder = {\n    Group,\n    Item,\n};\n\nexport { Reorder };\n"],"names":["CardImg","React","ref","bsPrefix","className","variant","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","noop","any","warning","invariant","ReorderContext","createContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","transformName","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","useConstant","init","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","this","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","frame","keepAlive","immediate","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","arguments","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","DocumentProjectionNode","documentElement","scrollLeft","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","exec","parseCSSVariable","fallback","getPropertyValue","resolveCSSVariables","obj","TypeError","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig","checkReorder","order","nextOffset","nextItem","nextLayout","nextItemCenter","toIndex","startIndex","endIndex","moveItem","Group","onReorder","isReordering","registerItem","compareMin","updateOrder","newOrder","ignoreStrict","useMotionValue","useState","setLatest","isCustomValueType","useTransform","inputRangeOrTransformer","outputRange","useImmediate","argOffset","inputValue","useListTransform","combineValues","updateValue","scheduleUpdate","useCombineMotionValues","useDefaultMotionValue","Item","latestX","latestY","gesturePoint","onLayoutMeasure","measured","Reorder"],"sourceRoot":""}