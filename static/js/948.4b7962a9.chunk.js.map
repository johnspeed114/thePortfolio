{"version":3,"file":"static/js/948.4b7962a9.chunk.js","mappings":"mPAmBA,EAhBiB,SAAH,GAAyD,IAAnDA,EAAM,EAANA,OAAgBC,GAAF,EAANC,OAAmB,EAAXD,aAAaE,EAAO,EAAPA,QAASC,EAAK,EAALA,MACxD,OACE,iBAAKC,UAAU,yBAAwB,WACrC,gBAAKA,UAAU,uBAAsB,SAAEL,EAAS,KAChD,0BACE,gBACEK,UAAU,0BACVC,MAAO,CAAEC,gBAAgB,OAAD,OAASJ,EAAO,WAG5C,yBAAMF,KACN,iBAAKI,UAAU,sBAAqB,UAAC,IAAED,EAAM,UAGnD,ECkEA,EA9EuB,WACrB,OAAyCI,EAAAA,EAAAA,UAAS,IAAG,eAA9CC,EAAY,KAAEC,EAAgB,KA+CrC,OA7CAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,yCAAG,oHAEWC,MACrB,sDACA,KAAD,EAFa,IAARC,EAAQ,QAIAC,GAAG,CAAD,qBAAQ,IAAIC,MAAM,wBAAwB,KAAD,kBAEtCF,EAASG,OAAO,KAAD,EAA5BC,EAAI,OACVR,EAAiBQ,GAAM,kDAEvBC,QAAQC,IAAI,EAAD,IAAQ,0DAEtB,kBAbY,mCAebR,GACF,GAAG,KAEHD,EAAAA,EAAAA,YAAU,WACR,IAoBMU,EAAWC,aApBE,WACjB,IAAIC,GAAM,OAAOd,GACXe,EAAYC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAOK,OAAS,IAG9D,OAFeH,KAAKC,MAAsB,EAAhBD,KAAKE,WAG7B,KAAK,EACHJ,EAAOC,GAAWpB,OAASqB,KAAKC,MAAsB,IAAhBD,KAAKE,UAC3C,MACF,KAAK,EACHJ,EAAOC,GAAWpB,OAASqB,KAAKC,MAAsB,IAAhBD,KAAKE,UAC3C,MACF,QACER,QAAQC,IAAI,gBAGhBG,EAASA,EAAOM,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAE3B,MAAQ0B,EAAE1B,KAAK,IAChDM,EAAiBa,EACnB,GAEyC,KAEzC,OAAO,kBAAMS,cAAcX,EAAU,CACvC,GAAG,CAACZ,KAGF,iBAAKJ,UAAU,cAAa,WAC1B,eAAIA,UAAU,iDAAgD,SAAC,0BAG/D,SAAC4B,EAAA,QAAa,CACZC,OAAQzB,EACR0B,UAAWzB,EACX0B,GAAG,MAAK,UACR,SAACC,EAAA,EAAI,UACF5B,EAAa6B,KAAI,SAACC,EAAUC,GAAK,OAGhC,SAACP,EAAA,OAAY,CAACG,GAAG,MAA4BK,MAAOF,EAAS,UAC3D,SAAC,EAAQ,CACPvC,OAAQwC,EACRtC,OAAQqC,EAASG,OACjBzC,YAAasC,EAAStC,YACtBE,QAASoC,EAASpC,QAClBC,MAAOmC,EAASnC,OACXoC,IAPmBD,EAASG,OAStB,UAM3B,C","sources":["components/Pages/Projects/LeaderboardApp/Streamer.js","components/Pages/Projects/LeaderboardApp/LeaderboardApp.js"],"sourcesContent":["import React from 'react';\r\nimport './styles.scss'; // assuming the CSS file is located in this path\r\n\r\nconst Streamer = ({ number, userId, displayName, picture, score }) => {\r\n  return (\r\n    <div className='leaderboard__container'>\r\n      <div className='leaderboard__itemNum'>{number + 1}</div>\r\n      <div>\r\n        <div\r\n          className='leaderboard__profilePic'\r\n          style={{ backgroundImage: `url(${picture})` }}\r\n        />\r\n      </div>\r\n      <div>{displayName}</div>\r\n      <div className='leaderboard__points'> {score}pt</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Streamer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Reorder } from 'framer-motion';\r\nimport { Card } from 'react-bootstrap';\r\nimport Streamer from './Streamer';\r\nimport './styles.scss';\r\nconst LeaderboardApp = () => {\r\n  const [streamerList, setStreamersList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          'https://webcdn.17app.co/campaign/pretest/data.json'\r\n        );\r\n\r\n        if (!response.ok) throw new Error('Something went wrong');\r\n\r\n        const data = await response.json();\r\n        setStreamersList(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const randomizer = () => {\r\n      let newArr = [...streamerList];\r\n      const eleSelect = Math.floor(Math.random() * (newArr.length - 1));\r\n      const status = Math.floor(Math.random() * 2);\r\n\r\n      switch (status) {\r\n        case 0:\r\n          newArr[eleSelect].score += Math.floor(Math.random() * 500);\r\n          break;\r\n        case 1:\r\n          newArr[eleSelect].score -= Math.floor(Math.random() * 500);\r\n          break;\r\n        default:\r\n          console.log('wrong status');\r\n      }\r\n\r\n      newArr = newArr.sort((a, b) => b.score - a.score);\r\n      setStreamersList(newArr);\r\n    };\r\n\r\n    const interval = setInterval(randomizer, 100);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [streamerList]);\r\n\r\n  return (\r\n    <div className='leaderboard'>\r\n      <h2 className='mb-3 text-center text-light leaderboard__title'>\r\n        Streamer Leaderboard\r\n      </h2>\r\n      <Reorder.Group\r\n        values={streamerList}\r\n        onReorder={setStreamersList}\r\n        as='div'>\r\n        <Card>\r\n          {streamerList.map((streamer, index) => (\r\n            // Replaced the use of index as a key in the .map() function with streamer.userID.\r\n            // Using indexes as keys can lead to issues in React\r\n            <Reorder.Item as='div' key={streamer.userID} value={streamer}>\r\n              <Streamer\r\n                number={index}\r\n                userId={streamer.userID}\r\n                displayName={streamer.displayName}\r\n                picture={streamer.picture}\r\n                score={streamer.score}\r\n                key={index} // using index as key is not recommended, if userID is unique it would be better\r\n              />\r\n            </Reorder.Item>\r\n          ))}\r\n        </Card>\r\n      </Reorder.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeaderboardApp;\r\n"],"names":["number","displayName","userId","picture","score","className","style","backgroundImage","useState","streamerList","setStreamersList","useEffect","getData","fetch","response","ok","Error","json","data","console","log","interval","setInterval","newArr","eleSelect","Math","floor","random","length","sort","a","b","clearInterval","Reorder","values","onReorder","as","Card","map","streamer","index","value","userID"],"sourceRoot":""}